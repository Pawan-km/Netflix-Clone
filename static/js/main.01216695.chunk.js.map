{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","requests","data","results","fetchData","className","map","movie","onClick","console","log","movieTrailer","original_title","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","name","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","fetchTrending","fetchNeflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","request","Math","floor","random","length","table","style","backgroundSize","background","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01216695.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n})\r\n\r\n\r\n\r\nexport default instance\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from './axios'\r\nimport './Row.css'\r\nimport YouTube  from 'react-youtube'; //e:/WORKSPACE FOR WD/REACT/NETFLIX/netflix-clone/node_modules/movie-trailer/index\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) { \r\n    let base_url = \"https://image.tmdb.org/t/p/original\";\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\")    \r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const requests = await axios.get(fetchUrl)\r\n            setMovies(requests.data.results)\r\n            return requests;\r\n        }\r\n        fetchData(); \r\n\r\n    }, [fetchUrl])\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        }\r\n    }\r\n    const handleClick = (movie) => {\r\n        console.log('clicked on thumbnail')\r\n        if(trailerUrl){\r\n            setTrailerUrl(\"\")\r\n        }else{\r\n            movieTrailer(movie?.original_title || \"\")\r\n                .then((url) => {\r\n                    const urlParams = new URLSearchParams(new URL(url).search);\r\n                    setTrailerUrl(urlParams.get(\"v\"))\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img key={movie.id} onClick={() => handleClick(movie)} className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                ))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"c5bd922358c254a64600314e760b82e6\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNeflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\nexport default requests;\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from './axios';\r\nimport requests from './request';\r\nimport \"./Banner.css\";\r\n\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n        \r\n            const request = await axios.get(requests.fetchNeflixOriginals);\r\n        \r\n            setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)])\r\n        }\r\n        fetchData();\r\n    }, [])\r\n    console.table(movie)\r\n    function truncate(str, n){\r\n        return ( str?.length > n ? str.substr(0, n-1) + '...' : str)\r\n    }\r\n    return (\r\n        <header className=\"banner\" \r\n        style={{\r\n            backgroundSize: \"cover\",\r\n            background: `linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url(https://image.tmdb.org/t/p/original${movie?.backdrop_path || movie?.poster_path})`,\r\n            backgroundPosition: \"center center\"\r\n        }}>\r\n            <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name }</h1>\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n\r\n                <h1 className=\"banner__discription\">{truncate(movie?.overview, 150)}</h1>\r\n            </div>\r\n            <div className=\"banner--fadeBottom\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, {useState, useEffect} from 'react';\r\nimport './Nav.css'\r\n\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', () => {\r\n            if(window.scrollY > 100){\r\n                handleShow(true)\r\n            }else{\r\n                handleShow(false)\r\n            }\r\n        })\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"logo\" className=\"nav__logo\" />\r\n\r\n            <img src=\"https://pbs.twimg.com/media/DN1OYIFX0AAbOMe?format=jpg&name=small\" alt=\"\" className=\"nav__avatar\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\nimport './App.css';\nimport Row from './Row';\nimport requests from './request';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav/>\n      <Banner/>\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNeflixOriginals} isLargeRow={true}/>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}